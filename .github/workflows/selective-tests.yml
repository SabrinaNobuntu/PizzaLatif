name: Testes automáticos de PR/Issue

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issues:
    types: [opened]

jobs:
  selective-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Definir BASE e HEAD
        id: set-range
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "BASE=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV
            echo "HEAD=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            # Para issues, podemos testar a branch atual do default branch
            echo "BASE=$(git rev-parse origin/main~1)" >> $GITHUB_ENV
            echo "HEAD=$(git rev-parse origin/main)" >> $GITHUB_ENV
          fi

      - name: Detectar arquivos modificados
        id: detect
        run: |
          chmod +x ./.github/scripts/detect_changed_files.sh
          CHANGED=$(.github/scripts/detect_changed_files.sh "$BASE" "$HEAD")
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Executar testes
        if: steps.detect.outputs.changed_files != ''
        run: |
          chmod +x ./.github/scripts/run_tests_by_changed_files.sh
          ./.github/scripts/run_tests_by_changed_files.sh "${{ steps.detect.outputs.changed_files }}"

      - name: Comentar resultado no PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            github.issues.createComment({
              issue_number: ${{ github.event.pull_request.number || github.event.issue.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Testes concluídos ✅"
            })
