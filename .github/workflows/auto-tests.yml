name: Testes Autom√°ticos PR

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  detect-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: [frontend, backend]
    permissions:
      contents: read
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar depend√™ncias
        run: npm install
        working-directory: fontes/${{ matrix.test }}

      - name: Instalar jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Gerar lista de arquivos alterados
        id: detect
        run: |
          git fetch origin main
          git diff --name-only origin/main HEAD > changed_files.txt
          cat changed_files.txt

      - name: Rodar testes apenas para arquivos alterados
        run: |
          CHANGED_FILES=changed_files.txt
          CATEGORY="${{ matrix.test }}"
          REPORT_FILE="relatorio_testes_${CATEGORY}.txt"
          echo "Relat√≥rio de testes ($CATEGORY) - $(date)" > $REPORT_FILE

          RULES_JSON=$(cat test-rules.json)

          while read -r file; do
            if [[ -n "$file" && "$file" =~ \.(js|ts|jsx|tsx|sh)$ ]]; then
              CATEGORY_FILE=$(echo "$RULES_JSON" | jq -r ".rules[] | select(\"$file\" | test(.pattern)) | .category")
              CMD=$(echo "$RULES_JSON" | jq -r ".rules[] | select(\"$file\" | test(.pattern)) | .cmd")

              if [[ "$CATEGORY_FILE" == "$CATEGORY" ]]; then
                echo "üìÇ Arquivo alterado: $file ‚Üí Rodando testes da categoria: $CATEGORY" | tee -a $REPORT_FILE
                if eval "$CMD"; then
                  echo "‚úÖ Testes da categoria '$CATEGORY' passaram" | tee -a $REPORT_FILE
                else
                  echo "‚ùå Testes da categoria '$CATEGORY' falharam" | tee -a $REPORT_FILE
                  exit 1
                fi
              fi
            else
              echo "Ignorando arquivo: $file" | tee -a $REPORT_FILE
            fi
          done < $CHANGED_FILES

          if [ ! -s $REPORT_FILE ]; then
            echo "Nenhum teste executado." >> $REPORT_FILE
          fi

      - name: Upload do relat√≥rio
        uses: actions/upload-artifact@v4
        with:
          name: relatorio_testes_${{ matrix.test }}
          path: relatorio_testes_${{ matrix.test }}.txt

  report-status:
    runs-on: ubuntu-latest
    needs: detect-and-test
    if: always()
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Baixar artifacts
        uses: actions/download-artifact@v4
        with:
          name: relatorio_testes_frontend
          path: ./artifacts/frontend

      - name: Baixar artifacts
        uses: actions/download-artifact@v4
        with:
          name: relatorio_testes_backend
          path: ./artifacts/backend

      - name: Combinar relat√≥rios
        run: |
          cat ./artifacts/frontend/relatorio_testes_frontend.txt \
              ./artifacts/backend/relatorio_testes_backend.txt > relatorio_testes_completo.txt

      - name: Comentar no PR com o relat√≥rio completo
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let report = '';
            try { report = fs.readFileSync('relatorio_testes_completo.txt', 'utf8'); }
            catch (err) { report = 'Relat√≥rio de testes n√£o encontrado.'; }

            const commentBody = `### Relat√≥rio de Testes\n\n${report}`;
            const prNumber = context.payload.pull_request?.number;

            if (prNumber) {
              github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }
